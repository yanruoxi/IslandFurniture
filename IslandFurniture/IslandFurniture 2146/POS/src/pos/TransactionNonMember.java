/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos;

import Login.SystemUser;
import furniture.Furniture;
import gnu.io.SerialPort;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import storeInfo.Company;





/**
 *
 * @author Ruoxi
 */
public class TransactionNonMember extends javax.swing.JFrame {

    private Main main = null;
    private SystemUser systemUser = null;
    private Company company=null;
    private List<Furniture> furnitureList = new ArrayList<>();
    private BigDecimal totalAmount = BigDecimal.ZERO;

    private String partnerPoleDisplayCOMPort = "COM4";
    private OutputStream partnerPoleDisplayOutputStream;
    SerialPort serialPort;

    /**
     * Creates new form TransactionNonMember
     */
    public TransactionNonMember() {
        initComponents();
    }

    public TransactionNonMember(Main main, SystemUser sytemUser, Company company) {
        this();
        this.main = main;
        this.systemUser = sytemUser;
        this.company=company;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelProductName = new javax.swing.JLabel();
        jTextFieldFurniturName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabelQuantity = new javax.swing.JLabel();
        jTextFieldQuantity = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelTotalAmount = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabelUserCompany3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableFurnitureList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel1.setText("      Island Furniture Point of Sale");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabelProductName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelProductName.setText("Product Name: ");

        jTextFieldFurniturName.setToolTipText("");
        jTextFieldFurniturName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFurniturNameActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddProductActionPerformed(evt);
            }
        });

        jLabelQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelQuantity.setText("Quantity:");

        jTextFieldQuantity.setToolTipText("");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(229, 1073, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelQuantity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelProductName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldFurniturName, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                            .addComponent(jTextFieldQuantity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jButton3)
                        .addGap(211, 211, 211))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFurniturName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldQuantity)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addComponent(jButton1)
                .addGap(315, 315, 315))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Total :");
        jLabel2.setToolTipText("");

        jLabelTotalAmount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton4.setText("Payment");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabelTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jLabelUserCompany3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelUserCompany3.setText("SystemUserName  and company info");

        jTableFurnitureList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableFurnitureList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabelUserCompany3, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabelUserCompany3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(353, 353, 353))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Add Product Item");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddProductActionPerformed
        try {
            Furniture furniture = getFurnitureForPOS(jTextFieldFurniturName.getText());

            if (furniture == null) {
                JOptionPane.showMessageDialog(this, "No Such Product Sold in Store", "Error", JOptionPane.ERROR_MESSAGE);
                jTextFieldFurniturName.setText("");
                jTextFieldQuantity.setText("");

            } else {
                JOptionPane.showMessageDialog(this, "Product item added successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

//                //write to pole display
//                byte[] clear = {0x0C};
//                byte[] newLine = {0x0A};
//                byte[] carriageReturn = {0x0D};
//                byte[] message1 = furniture.getFurnitureName().getBytes();
//                byte[] message2 = jTextFieldQuantity.getText().getBytes();
//
//                try {
//                    partnerPoleDisplayOutputStream.write(clear);
//                    partnerPoleDisplayOutputStream.write(message1);
//                    partnerPoleDisplayOutputStream.write(newLine);
//                    partnerPoleDisplayOutputStream.write(carriageReturn);
//                    partnerPoleDisplayOutputStream.write(message2);
//                } catch (IOException ex) {
//                    JOptionPane.showMessageDialog(null, "Unable to write to Partner Pole Display: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//                }

                furniture.setPOSquantity(Integer.parseInt(jTextFieldQuantity.getText()));
                jTextFieldFurniturName.setText("");
                jTextFieldQuantity.setText("");
                furnitureList.add(furniture);
                totalAmount = totalAmount.add(furniture.getPrice().multiply(new BigDecimal(furniture.getPOSquantity())));
                jLabelTotalAmount.setText(totalAmount.toString());
                loadTable();

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unknown error has occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddProductActionPerformed

    private void jTextFieldFurniturNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFurniturNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFurniturNameActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        main.setVisible(true);

//        if (serialPort != null) {
//            try {
//                byte[] clear = {0x0C};
//                partnerPoleDisplayOutputStream.write(clear);
//                partnerPoleDisplayOutputStream.close();
//                serialPort.close();
//            } catch (IOException ex) {
//                ex.printStackTrace();
//            }
//        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadTable();      
        
          if (systemUser != null) {
            jLabelUserCompany3.setText("Login as " + systemUser.getUserName() + " at " + company.getCompanyName() + " in " + company.getCountry() + " " + company.getAddress());
        } else {
            jLabelUserCompany3.setText("Please Login");
        }
        initPartnerPoleDisplay();
    }//GEN-LAST:event_formWindowOpened

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        jTextFieldFurniturName.setText("");
        jTextFieldQuantity.setText("");
        jLabelTotalAmount.setText("");
        furnitureList.clear();
        resetTable();
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPaymentActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String date = dateFormat.format(cal.getTime());

        List<String> furnitureNameList = new ArrayList<>();
        List<Integer> amountList = new ArrayList<>();

        for (Furniture furniture : furnitureList) {
            furnitureNameList.add(furniture.getFurnitureName());
            amountList.add(furniture.getPOSquantity());
        }

        Random random = new Random();
        Integer value = random.nextInt(500000000);
        String transactionReference = value.toString();

        try {
            createTransationOrderforPOS(furnitureNameList, amountList, totalAmount, date, transactionReference);
            createHQTransationOrderforPOS(furnitureNameList, amountList, totalAmount, date, transactionReference);
            JOptionPane.showMessageDialog(this, "Transaction Completed Successfully." + "Transaction Reference Number is :" + transactionReference, "Success", JOptionPane.INFORMATION_MESSAGE);

////write to pole display
//            byte[] clear = {0x0C};
//            byte[] newLine = {0x0A};
//            byte[] carriageReturn = {0x0D};
//            byte[] message0 = "Thank you for visitng Island Furniture".getBytes();
//            byte[] message1 = transactionReference.getBytes();
//            byte[] message2 = totalAmount.toString().getBytes();
//
//            try {
//                partnerPoleDisplayOutputStream.write(clear);
//                 partnerPoleDisplayOutputStream.write(message0);
//                partnerPoleDisplayOutputStream.write(message1);
//                partnerPoleDisplayOutputStream.write(newLine);
//                partnerPoleDisplayOutputStream.write(carriageReturn);
//                partnerPoleDisplayOutputStream.write(message2);
//            } catch (IOException ex) {
//                JOptionPane.showMessageDialog(null, "Unable to write to Partner Pole Display: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//            }
//
////print receipt and cash box out
//            printerAndCashbox();

            jTextFieldFurniturName.setText("");
            jTextFieldQuantity.setText("");
            jLabelTotalAmount.setText("");
            furnitureList.clear();
            resetTable();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unknown error has occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButtonPaymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionNonMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionNonMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionNonMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionNonMember.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionNonMember().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelProductName;
    private javax.swing.JLabel jLabelQuantity;
    private javax.swing.JLabel jLabelTotalAmount;
    private javax.swing.JLabel jLabelUserCompany3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableFurnitureList;
    private javax.swing.JTextField jTextFieldFurniturName;
    private javax.swing.JTextField jTextFieldQuantity;
    // End of variables declaration//GEN-END:variables

  private void loadTable() {
        try {
            if (furnitureList != null && furnitureList.size() > 0) {
                Object[][] data = new Object[furnitureList.size()][6];

                for (int i = 0; i < furnitureList.size(); i++) {
                    Furniture furniture = furnitureList.get(i);
                    data[i][0] = furniture.getId();
                    data[i][1] = furniture.getFurnitureName();
                    data[i][2] = furniture.getCategory();
                    data[i][3] = furniture.getPrice();                
                    data[i][4] = furniture.getColor();
                    data[i][5] = furniture.getPOSquantity();
                }

                Object[] columnNames = new Object[6];
                columnNames[0] = "Product Item ID";
                columnNames[1] = "Name";
                columnNames[2] = "Category";
                columnNames[3] = "Price";             
                columnNames[4] = "Color";
                columnNames[5] = "Quantity";

                TableModel tableModel = new DefaultTableModel(data, columnNames);
                jTableFurnitureList.setModel(tableModel);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unknown error has occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void resetTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) jTableFurnitureList.getModel();
            model.setRowCount(0);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "An unknown error has occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void initPartnerPoleDisplay() {
//        Enumeration commPortList = CommPortIdentifier.getPortIdentifiers();
//
//        while (commPortList.hasMoreElements()) {
//            CommPortIdentifier commPort = (CommPortIdentifier) commPortList.nextElement();
//
//            if (commPort.getPortType() == CommPortIdentifier.PORT_SERIAL
//                    && commPort.getName().equals(partnerPoleDisplayCOMPort)) {
//                try {
//                    serialPort = (SerialPort) commPort.open("UnifiedPointOfSale", 5000);
//                    partnerPoleDisplayOutputStream = serialPort.getOutputStream();
//                } catch (PortInUseException ex) {
//                    JOptionPane.showMessageDialog(null, "Unable to initialize Partner Pole Display: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//                } catch (IOException ex) {
//                    JOptionPane.showMessageDialog(null, "Unable to initialize Partner Pole Display: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        }
    }

    private void printerAndCashbox() {
//        try {
//            Double margin = 1.0;
//            Integer lines = 8;
//            String test = null;
//
//            PrinterJob printerJob = PrinterJob.getPrinterJob();
//            PageFormat pageFormat = printerJob.defaultPage();
//            Paper paper = new Paper();
//            paper.setSize(180.0, (double) (paper.getHeight() + lines * 10.0));
//            paper.setImageableArea(margin, margin, paper.getWidth() - margin * 2, paper.getHeight() - margin * 2);
//            pageFormat.setPaper(paper);
//            pageFormat.setOrientation(PageFormat.PORTRAIT);
//
//            printerJob.setPrintable(jTableFurnitureList.getPrintable(JTable.PrintMode.NORMAL, null, null), pageFormat);
//
//            printerJob.print();
//        } catch (PrinterException ex) {
//            JOptionPane.showMessageDialog(null, "Unable to print to Partner Thermal Printer: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }

   

  


    private static Furniture getFurnitureForPOS(java.lang.String furnitureName) {
        furniture.FurnitureForPOS_Service service = new furniture.FurnitureForPOS_Service();
        furniture.FurnitureForPOS port = service.getFurnitureForPOSPort();
        return port.getFurnitureForPOS(furnitureName);
    }


    private static void createTransationOrderforPOS(java.util.List<java.lang.String> furnitureNameList, java.util.List<java.lang.Integer> amountList, java.math.BigDecimal totalAmount, java.lang.String date, java.lang.String transactionReference) {
        storeTO.StoreTransactionOrder_Service service = new storeTO.StoreTransactionOrder_Service();
        storeTO.StoreTransactionOrder port = service.getStoreTransactionOrderPort();
        port.createTransationOrderforPOS(furnitureNameList, amountList, totalAmount, date, transactionReference);
    }

    private static void createHQTransationOrderforPOS(java.util.List<java.lang.String> furnitureNameList, java.util.List<java.lang.Integer> amountList, java.math.BigDecimal totalAmount, java.lang.String date, java.lang.String transactionReference) {
        hqNonMember.HQTransactionOrderNonMember_Service service = new hqNonMember.HQTransactionOrderNonMember_Service();
        hqNonMember.HQTransactionOrderNonMember port = service.getHQTransactionOrderNonMemberPort();
        port.createHQTransationOrderforPOS(furnitureNameList, amountList, totalAmount, date, transactionReference);
    }

  

  

  

}
